language: cpp
matrix:
    include:
        # note that gcc Debug MUST be 1st for Coverity
        - os: linux
          compiler: gcc
          env: CONFIGURATION="Debug"
        - os: linux
          compiler: clang
          env: CONFIGURATION="Debug"
        - os: osx
          compiler: clang
          env: CONFIGURATION="Debug" MACOSX_ARCH=i386
        - os: osx
          compiler: clang
          env: CONFIGURATION="Debug" MACOSX_ARCH=x86_64

        - os: linux
          compiler: gcc
          env: CONFIGURATION="Release"
        - os: linux
          compiler: clang
          env: CONFIGURATION="Release"
        - os: osx
          compiler: clang
          env: CONFIGURATION="Release" MACOSX_ARCH=i386
        - os: osx
          compiler: clang
          env: CONFIGURATION="Release" MACOSX_ARCH=x86_64
before_install:
    # Exit build if it's not a release tag
    - export TEST_TAG=release_42
    - echo "$TEST_TAG"
    - RELEASE_BUILD=true
    - if [[ ! ("$TEST_TAG" =~ ^release.*) ]]; then echo "Skipping non-release tag" ; RELEASE_BUILD=false ; fi
    - if ([[ "$TRAVIS_OS_NAME" == "linux" ]] && [[ "$CC" == "clang" ]]); then echo "Skipping non-release compiler" ; RELEASE_BUILD=false ; fi
    - if ([[ "$TRAVIS_OS_NAME" == "osx" ]] && [[ "$MACOSX_ARCH" == "i386" ]]); then echo "Skipping non-release architecture" ; RELEASE_BUILD=false ; fi
    - if [[ "$CONFIGURATION" == "Debug" ]]; then echo "Skipping non-release configuration" ; RELEASE_BUILD=false ; fi
script:
    - if [ "$RELEASE_BUILD" = true ] ; then echo "Releasing!"; else echo "Doing CI"; fi
